<Type Name="CSharpGeneratorDriver" FullName="Microsoft.CodeAnalysis.CSharp.CSharpGeneratorDriver">
  <TypeSignature Language="C#" Value="public sealed class CSharpGeneratorDriver : Microsoft.CodeAnalysis.GeneratorDriver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CSharpGeneratorDriver extends Microsoft.CodeAnalysis.GeneratorDriver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.CSharpGeneratorDriver" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CSharpGeneratorDriver&#xA;Inherits GeneratorDriver" />
  <TypeSignature Language="F#" Value="type CSharpGeneratorDriver = class&#xA;    inherit GeneratorDriver" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>3.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.GeneratorDriver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpGeneratorDriver (Microsoft.CodeAnalysis.ParseOptions parseOptions, System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ISourceGenerator&gt; generators, System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.AdditionalText&gt; additionalTexts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CodeAnalysis.ParseOptions parseOptions, valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.ISourceGenerator&gt; generators, valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.AdditionalText&gt; additionalTexts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpGeneratorDriver.#ctor(Microsoft.CodeAnalysis.ParseOptions,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ISourceGenerator},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.AdditionalText})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parseOptions As ParseOptions, generators As ImmutableArray(Of ISourceGenerator), additionalTexts As ImmutableArray(Of AdditionalText))" />
      <MemberSignature Language="F#" Value="new Microsoft.CodeAnalysis.CSharp.CSharpGeneratorDriver : Microsoft.CodeAnalysis.ParseOptions * System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ISourceGenerator&gt; * System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.AdditionalText&gt; -&gt; Microsoft.CodeAnalysis.CSharp.CSharpGeneratorDriver" Usage="new Microsoft.CodeAnalysis.CSharp.CSharpGeneratorDriver (parseOptions, generators, additionalTexts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parseOptions" Type="Microsoft.CodeAnalysis.ParseOptions" />
        <Parameter Name="generators" Type="System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ISourceGenerator&gt;" />
        <Parameter Name="additionalTexts" Type="System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.AdditionalText&gt;" />
      </Parameters>
      <Docs>
        <param name="parseOptions">To be added.</param>
        <param name="generators">To be added.</param>
        <param name="additionalTexts">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
