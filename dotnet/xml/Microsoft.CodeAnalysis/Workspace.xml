<Type Name="Workspace" FullName="Microsoft.CodeAnalysis.Workspace">
  <TypeSignature Language="C#" Value="public abstract class Workspace : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Workspace extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Workspace" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Workspace&#xA;Implements IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A workspace provides access to a active set of source code projects and documents and their
            associated syntax trees, compilations and semantic models. A workspace has a current solution
            that is an immutable snapshot of the projects and documents. This property may change over time 
            as the workspace is updated either from live interactions in the environment or via call to the
            workspace's <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Workspace (Microsoft.CodeAnalysis.Host.HostServices host, string workspaceKind);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.CodeAnalysis.Host.HostServices host, string workspaceKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.#ctor(Microsoft.CodeAnalysis.Host.HostServices,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (host As HostServices, workspaceKind As String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="Microsoft.CodeAnalysis.Host.HostServices" />
        <Parameter Name="workspaceKind" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">The <see cref="T:Microsoft.CodeAnalysis.Host.HostServices" /> this workspace uses</param>
        <param name="workspaceKind">A string that can be used to identify the kind of workspace. Usually this matches the name of the class.</param>
        <summary>
            Constructs a new workspace instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustReloadedProject">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.CodeAnalysis.Project AdjustReloadedProject (Microsoft.CodeAnalysis.Project oldProject, Microsoft.CodeAnalysis.Project reloadedProject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.CodeAnalysis.Project AdjustReloadedProject(class Microsoft.CodeAnalysis.Project oldProject, class Microsoft.CodeAnalysis.Project reloadedProject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.AdjustReloadedProject(Microsoft.CodeAnalysis.Project,Microsoft.CodeAnalysis.Project)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AdjustReloadedProject (oldProject As Project, reloadedProject As Project) As Project" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldProject" Type="Microsoft.CodeAnalysis.Project" />
        <Parameter Name="reloadedProject" Type="Microsoft.CodeAnalysis.Project" />
      </Parameters>
      <Docs>
        <param name="oldProject">To be added.</param>
        <param name="reloadedProject">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustReloadedSolution">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.CodeAnalysis.Solution AdjustReloadedSolution (Microsoft.CodeAnalysis.Solution oldSolution, Microsoft.CodeAnalysis.Solution reloadedSolution);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.CodeAnalysis.Solution AdjustReloadedSolution(class Microsoft.CodeAnalysis.Solution oldSolution, class Microsoft.CodeAnalysis.Solution reloadedSolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.AdjustReloadedSolution(Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Solution)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AdjustReloadedSolution (oldSolution As Solution, reloadedSolution As Solution) As Solution" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldSolution" Type="Microsoft.CodeAnalysis.Solution" />
        <Parameter Name="reloadedSolution" Type="Microsoft.CodeAnalysis.Solution" />
      </Parameters>
      <Docs>
        <param name="oldSolution">To be added.</param>
        <param name="reloadedSolution">To be added.</param>
        <summary>
             This method is called during OnSolutionReload.  Override this method if you want to manipulate
             the reloaded solution.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAdditionalDocumentAdded">
      <MemberSignature Language="C#" Value="protected virtual void ApplyAdditionalDocumentAdded (Microsoft.CodeAnalysis.DocumentInfo info, Microsoft.CodeAnalysis.Text.SourceText text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyAdditionalDocumentAdded(class Microsoft.CodeAnalysis.DocumentInfo info, class Microsoft.CodeAnalysis.Text.SourceText text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo,Microsoft.CodeAnalysis.Text.SourceText)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ApplyAdditionalDocumentAdded (info As DocumentInfo, text As SourceText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Microsoft.CodeAnalysis.DocumentInfo" />
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="text">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to add a new additional document to a project.
            
            Override this method to implement the capability of adding additional documents.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAdditionalDocumentRemoved">
      <MemberSignature Language="C#" Value="protected virtual void ApplyAdditionalDocumentRemoved (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyAdditionalDocumentRemoved(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to remove an additional document from a project.
            
            Override this method to implement the capability of removing additional documents.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAdditionalDocumentTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void ApplyAdditionalDocumentTextChanged (Microsoft.CodeAnalysis.DocumentId id, Microsoft.CodeAnalysis.Text.SourceText text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyAdditionalDocumentTextChanged(class Microsoft.CodeAnalysis.DocumentId id, class Microsoft.CodeAnalysis.Text.SourceText text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ApplyAdditionalDocumentTextChanged (id As DocumentId, text As SourceText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="text">To be added.</param>
        <summary>
            This method is called to change the text of an additional document.
            
            Override this method to implement the capability of changing additional document text.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnalyzerReferenceAdded">
      <MemberSignature Language="C#" Value="protected virtual void ApplyAnalyzerReferenceAdded (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyAnalyzerReferenceAdded(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="analyzerReference" Type="Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="analyzerReference">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to add an analyzer reference to a project.
            
            Override this method to implement the capability of adding analyzer references.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnalyzerReferenceRemoved">
      <MemberSignature Language="C#" Value="protected virtual void ApplyAnalyzerReferenceRemoved (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyAnalyzerReferenceRemoved(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="analyzerReference" Type="Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="analyzerReference">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to remove an analyzer reference from a project.
            
            Override this method to implement the capability of removing analyzer references.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCompilationOptionsChanged">
      <MemberSignature Language="C#" Value="protected virtual void ApplyCompilationOptionsChanged (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.CompilationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyCompilationOptionsChanged(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.CompilationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="options" Type="Microsoft.CodeAnalysis.CompilationOptions" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to change the compilation options.
            
            Override this method to implement the capability of changing compilation options.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDocumentAdded">
      <MemberSignature Language="C#" Value="protected virtual void ApplyDocumentAdded (Microsoft.CodeAnalysis.DocumentInfo info, Microsoft.CodeAnalysis.Text.SourceText text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyDocumentAdded(class Microsoft.CodeAnalysis.DocumentInfo info, class Microsoft.CodeAnalysis.Text.SourceText text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo,Microsoft.CodeAnalysis.Text.SourceText)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ApplyDocumentAdded (info As DocumentInfo, text As SourceText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Microsoft.CodeAnalysis.DocumentInfo" />
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="text">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to add a new document to a project.
            
            Override this method to implement the capability of adding documents.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDocumentInfoChanged">
      <MemberSignature Language="C#" Value="protected virtual void ApplyDocumentInfoChanged (Microsoft.CodeAnalysis.DocumentId id, Microsoft.CodeAnalysis.DocumentInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyDocumentInfoChanged(class Microsoft.CodeAnalysis.DocumentId id, class Microsoft.CodeAnalysis.DocumentInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyDocumentInfoChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.DocumentInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ApplyDocumentInfoChanged (id As DocumentId, info As DocumentInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="info" Type="Microsoft.CodeAnalysis.DocumentInfo" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="info">To be added.</param>
        <summary>
            This method is called to change the info of a document.
            
            Override this method to implement the capability of changing a document's info.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDocumentRemoved">
      <MemberSignature Language="C#" Value="protected virtual void ApplyDocumentRemoved (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyDocumentRemoved(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to remove a document from a project.
            
            Override this method to implement the capability of removing documents.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDocumentTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void ApplyDocumentTextChanged (Microsoft.CodeAnalysis.DocumentId id, Microsoft.CodeAnalysis.Text.SourceText text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyDocumentTextChanged(class Microsoft.CodeAnalysis.DocumentId id, class Microsoft.CodeAnalysis.Text.SourceText text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ApplyDocumentTextChanged (id As DocumentId, text As SourceText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="text">To be added.</param>
        <summary>
            This method is called to change the text of a document.
            
            Override this method to implement the capability of changing document text.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyMetadataReferenceAdded">
      <MemberSignature Language="C#" Value="protected virtual void ApplyMetadataReferenceAdded (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.MetadataReference metadataReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyMetadataReferenceAdded(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.MetadataReference metadataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="metadataReference" Type="Microsoft.CodeAnalysis.MetadataReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="metadataReference">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to add a metadata reference to a project.
            
            Override this method to implement the capability of adding metadata references.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyMetadataReferenceRemoved">
      <MemberSignature Language="C#" Value="protected virtual void ApplyMetadataReferenceRemoved (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.MetadataReference metadataReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyMetadataReferenceRemoved(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.MetadataReference metadataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="metadataReference" Type="Microsoft.CodeAnalysis.MetadataReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="metadataReference">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to remove a metadata reference from a project.
            
            Override this method to implement the capability of removing metadata references.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParseOptionsChanged">
      <MemberSignature Language="C#" Value="protected virtual void ApplyParseOptionsChanged (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.ParseOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyParseOptionsChanged(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.ParseOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="options" Type="Microsoft.CodeAnalysis.ParseOptions" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to change the parse options.
            
            Override this method to implement the capability of changing parse options.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyProjectAdded">
      <MemberSignature Language="C#" Value="protected virtual void ApplyProjectAdded (Microsoft.CodeAnalysis.ProjectInfo project);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyProjectAdded(class Microsoft.CodeAnalysis.ProjectInfo project) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ApplyProjectAdded (project As ProjectInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="project" Type="Microsoft.CodeAnalysis.ProjectInfo" />
      </Parameters>
      <Docs>
        <param name="project">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to add a project to the current solution.
            
            Override this method to implement the capability of adding projects.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyProjectChanges">
      <MemberSignature Language="C#" Value="protected virtual void ApplyProjectChanges (Microsoft.CodeAnalysis.ProjectChanges projectChanges);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyProjectChanges(valuetype Microsoft.CodeAnalysis.ProjectChanges projectChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(Microsoft.CodeAnalysis.ProjectChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectChanges" Type="Microsoft.CodeAnalysis.ProjectChanges" />
      </Parameters>
      <Docs>
        <param name="projectChanges">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> for each project 
            that has been added, removed or changed.
            
            Override this method if you want to modify how project changes are applied.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyProjectReferenceAdded">
      <MemberSignature Language="C#" Value="protected virtual void ApplyProjectReferenceAdded (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.ProjectReference projectReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyProjectReferenceAdded(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.ProjectReference projectReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="projectReference" Type="Microsoft.CodeAnalysis.ProjectReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="projectReference">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to add a project reference to a project.
            
            Override this method to implement the capability of adding project references.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyProjectReferenceRemoved">
      <MemberSignature Language="C#" Value="protected virtual void ApplyProjectReferenceRemoved (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.ProjectReference projectReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyProjectReferenceRemoved(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.ProjectReference projectReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="projectReference" Type="Microsoft.CodeAnalysis.ProjectReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="projectReference">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to remove a project reference from a project.
            
            Override this method to implement the capability of removing project references.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyProjectRemoved">
      <MemberSignature Language="C#" Value="protected virtual void ApplyProjectRemoved (Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyProjectRemoved(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ApplyProjectRemoved(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>
            This method is called during <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> to remove a project from the current solution.
            
            Override this method to implement the capability of removing projects.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanApplyChange">
      <MemberSignature Language="C#" Value="public virtual bool CanApplyChange (Microsoft.CodeAnalysis.ApplyChangesKind feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanApplyChange(valuetype Microsoft.CodeAnalysis.ApplyChangesKind feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CanApplyChange(Microsoft.CodeAnalysis.ApplyChangesKind)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanApplyChange (feature As ApplyChangesKind) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="Microsoft.CodeAnalysis.ApplyChangesKind" />
      </Parameters>
      <Docs>
        <param name="feature">To be added.</param>
        <summary>
            Determines if the specific kind of change is supported by the <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanApplyParseOptionChange">
      <MemberSignature Language="C#" Value="protected virtual bool CanApplyParseOptionChange (Microsoft.CodeAnalysis.ParseOptions oldOptions, Microsoft.CodeAnalysis.ParseOptions newOptions, Microsoft.CodeAnalysis.Project project);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanApplyParseOptionChange(class Microsoft.CodeAnalysis.ParseOptions oldOptions, class Microsoft.CodeAnalysis.ParseOptions newOptions, class Microsoft.CodeAnalysis.Project project) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CanApplyParseOptionChange(Microsoft.CodeAnalysis.ParseOptions,Microsoft.CodeAnalysis.ParseOptions,Microsoft.CodeAnalysis.Project)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldOptions" Type="Microsoft.CodeAnalysis.ParseOptions" />
        <Parameter Name="newOptions" Type="Microsoft.CodeAnalysis.ParseOptions" />
        <Parameter Name="project" Type="Microsoft.CodeAnalysis.Project" />
      </Parameters>
      <Docs>
        <param name="oldOptions">To be added.</param>
        <param name="newOptions">To be added.</param>
        <param name="project">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanOpenDocuments">
      <MemberSignature Language="C#" Value="public virtual bool CanOpenDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanOpenDocuments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Workspace.CanOpenDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanOpenDocuments As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if this workspace supports manually opening and closing documents.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAdditionalDocumentIsInCurrentSolution">
      <MemberSignature Language="C#" Value="protected void CheckAdditionalDocumentIsInCurrentSolution (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckAdditionalDocumentIsInCurrentSolution(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Throws an exception if an additional document is not part of the current solution.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAdditionalDocumentIsNotInCurrentSolution">
      <MemberSignature Language="C#" Value="protected void CheckAdditionalDocumentIsNotInCurrentSolution (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckAdditionalDocumentIsNotInCurrentSolution(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Throws an exception if an additional document is already part of the current solution.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCanOpenDocuments">
      <MemberSignature Language="C#" Value="protected void CheckCanOpenDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckCanOpenDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckCanOpenDocuments" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckCanOpenDocuments ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDocumentCanBeRemoved">
      <MemberSignature Language="C#" Value="protected virtual void CheckDocumentCanBeRemoved (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckDocumentCanBeRemoved(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckDocumentCanBeRemoved(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDocumentIsClosed">
      <MemberSignature Language="C#" Value="protected void CheckDocumentIsClosed (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckDocumentIsClosed(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckDocumentIsClosed(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDocumentIsInCurrentSolution">
      <MemberSignature Language="C#" Value="protected void CheckDocumentIsInCurrentSolution (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckDocumentIsInCurrentSolution(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Throws an exception if a document is not part of the current solution.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDocumentIsNotInCurrentSolution">
      <MemberSignature Language="C#" Value="protected void CheckDocumentIsNotInCurrentSolution (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckDocumentIsNotInCurrentSolution(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Throws an exception if a document is already part of the current solution.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDocumentIsOpen">
      <MemberSignature Language="C#" Value="protected void CheckDocumentIsOpen (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckDocumentIsOpen(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckDocumentIsOpen(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProjectCanBeRemoved">
      <MemberSignature Language="C#" Value="protected virtual void CheckProjectCanBeRemoved (Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckProjectCanBeRemoved(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckProjectCanBeRemoved(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>
            Currently projects can always be removed, but this method still exists because it's protected and we don't
            want to break people who may have derived from <see cref="T:Microsoft.CodeAnalysis.Workspace" /> and either called it, or overridden it.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProjectDoesNotContainOpenDocuments">
      <MemberSignature Language="C#" Value="protected void CheckProjectDoesNotContainOpenDocuments (Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckProjectDoesNotContainOpenDocuments(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotContainOpenDocuments(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProjectDoesNotHaveAnalyzerReference">
      <MemberSignature Language="C#" Value="protected void CheckProjectDoesNotHaveAnalyzerReference (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckProjectDoesNotHaveAnalyzerReference(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="analyzerReference" Type="Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="analyzerReference">To be added.</param>
        <summary>
            Throws an exception if a project already has a specific analyzer reference.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProjectDoesNotHaveMetadataReference">
      <MemberSignature Language="C#" Value="protected void CheckProjectDoesNotHaveMetadataReference (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.MetadataReference metadataReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckProjectDoesNotHaveMetadataReference(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.MetadataReference metadataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="metadataReference" Type="Microsoft.CodeAnalysis.MetadataReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="metadataReference">To be added.</param>
        <summary>
            Throws an exception if a project already has a specific metadata reference.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProjectDoesNotHaveProjectReference">
      <MemberSignature Language="C#" Value="protected void CheckProjectDoesNotHaveProjectReference (Microsoft.CodeAnalysis.ProjectId fromProjectId, Microsoft.CodeAnalysis.ProjectReference projectReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckProjectDoesNotHaveProjectReference(class Microsoft.CodeAnalysis.ProjectId fromProjectId, class Microsoft.CodeAnalysis.ProjectReference projectReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromProjectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="projectReference" Type="Microsoft.CodeAnalysis.ProjectReference" />
      </Parameters>
      <Docs>
        <param name="fromProjectId">To be added.</param>
        <param name="projectReference">To be added.</param>
        <summary>
            Throws an exception if a project already has a specific project reference.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProjectDoesNotHaveTransitiveProjectReference">
      <MemberSignature Language="C#" Value="protected void CheckProjectDoesNotHaveTransitiveProjectReference (Microsoft.CodeAnalysis.ProjectId fromProjectId, Microsoft.CodeAnalysis.ProjectId toProjectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckProjectDoesNotHaveTransitiveProjectReference(class Microsoft.CodeAnalysis.ProjectId fromProjectId, class Microsoft.CodeAnalysis.ProjectId toProjectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveTransitiveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectId)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckProjectDoesNotHaveTransitiveProjectReference (fromProjectId As ProjectId, toProjectId As ProjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromProjectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="toProjectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="fromProjectId">To be added.</param>
        <param name="toProjectId">To be added.</param>
        <summary>
            Throws an exception if project has a transitive reference to another project.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProjectHasAnalyzerReference">
      <MemberSignature Language="C#" Value="protected void CheckProjectHasAnalyzerReference (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckProjectHasAnalyzerReference(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckProjectHasAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="analyzerReference" Type="Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="analyzerReference">To be added.</param>
        <summary>
            Throws an exception if a project does not have a specific analyzer reference.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProjectHasMetadataReference">
      <MemberSignature Language="C#" Value="protected void CheckProjectHasMetadataReference (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.MetadataReference metadataReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckProjectHasMetadataReference(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.MetadataReference metadataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckProjectHasMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="metadataReference" Type="Microsoft.CodeAnalysis.MetadataReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="metadataReference">To be added.</param>
        <summary>
            Throws an exception if a project does not have a specific metadata reference.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProjectHasProjectReference">
      <MemberSignature Language="C#" Value="protected void CheckProjectHasProjectReference (Microsoft.CodeAnalysis.ProjectId fromProjectId, Microsoft.CodeAnalysis.ProjectReference projectReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckProjectHasProjectReference(class Microsoft.CodeAnalysis.ProjectId fromProjectId, class Microsoft.CodeAnalysis.ProjectReference projectReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckProjectHasProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromProjectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="projectReference" Type="Microsoft.CodeAnalysis.ProjectReference" />
      </Parameters>
      <Docs>
        <param name="fromProjectId">To be added.</param>
        <param name="projectReference">To be added.</param>
        <summary>
            Throws an exception if a project does not have a specific project reference.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProjectIsInCurrentSolution">
      <MemberSignature Language="C#" Value="protected void CheckProjectIsInCurrentSolution (Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckProjectIsInCurrentSolution(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckProjectIsInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>
            Throws an exception if the project is not part of the current solution.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckProjectIsNotInCurrentSolution">
      <MemberSignature Language="C#" Value="protected void CheckProjectIsNotInCurrentSolution (Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckProjectIsNotInCurrentSolution(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckProjectIsNotInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>
            Throws an exception is the project is part of the current solution.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSolutionIsEmpty">
      <MemberSignature Language="C#" Value="protected void CheckSolutionIsEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckSolutionIsEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CheckSolutionIsEmpty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckSolutionIsEmpty ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws an exception is the solution is not empty.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearDocumentData">
      <MemberSignature Language="C#" Value="protected virtual void ClearDocumentData (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearDocumentData(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ClearDocumentData(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            This method is called to clear an individual document is removed.
            
            Override this method if you want to do additional work when a document is removed.
            Call the base method at the end of your method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOpenDocument">
      <MemberSignature Language="C#" Value="protected void ClearOpenDocument (Microsoft.CodeAnalysis.DocumentId documentId, bool isSolutionClosing = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearOpenDocument(class Microsoft.CodeAnalysis.DocumentId documentId, bool isSolutionClosing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ClearOpenDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="isSolutionClosing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="isSolutionClosing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearProjectData">
      <MemberSignature Language="C#" Value="protected virtual void ClearProjectData (Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearProjectData(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ClearProjectData(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>
            This method is called when an individual project is removed.
            
            Override this method if you want to do additional work when a project is removed.
            Call the base method at the end of your method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearSolution">
      <MemberSignature Language="C#" Value="protected void ClearSolution ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearSolution() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ClearSolution" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearSolution ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clears all solution data and empties the current solution.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearSolutionData">
      <MemberSignature Language="C#" Value="protected virtual void ClearSolutionData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearSolutionData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ClearSolutionData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearSolutionData ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This method is called when a solution is cleared.
            
            Override this method if you want to do additional work when a solution is cleared. 
            Call the base method at the end of your method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAdditionalDocument">
      <MemberSignature Language="C#" Value="public virtual void CloseAdditionalDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseAdditionalDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CloseAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Close the specified additional document in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseDocument">
      <MemberSignature Language="C#" Value="public virtual void CloseDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CloseDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Close the specified document in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSolution">
      <MemberSignature Language="C#" Value="protected internal Microsoft.CodeAnalysis.Solution CreateSolution (Microsoft.CodeAnalysis.SolutionId id);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class Microsoft.CodeAnalysis.Solution CreateSolution(class Microsoft.CodeAnalysis.SolutionId id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionId)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function CreateSolution (id As SolutionId) As Solution" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Microsoft.CodeAnalysis.SolutionId" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>
            Create a new empty solution instance associated with this workspace.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSolution">
      <MemberSignature Language="C#" Value="protected internal Microsoft.CodeAnalysis.Solution CreateSolution (Microsoft.CodeAnalysis.SolutionInfo solutionInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class Microsoft.CodeAnalysis.Solution CreateSolution(class Microsoft.CodeAnalysis.SolutionInfo solutionInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionInfo" Type="Microsoft.CodeAnalysis.SolutionInfo" />
      </Parameters>
      <Docs>
        <param name="solutionInfo">To be added.</param>
        <summary>
            Create a new empty solution instance associated with this workspace.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSolution">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution CurrentSolution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Solution CurrentSolution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Workspace.CurrentSolution" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSolution As Solution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The current solution. 
            
            The solution is an immutable model of the current set of projects and source documents.
            It provides access to source text, syntax trees and semantics.
            
            This property may change as the workspace reacts to changes in the environment or
            after <see cref="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" /> is called.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disposes this workspace. The workspace can longer be used after it is disposed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool finalize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool finalize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (finalize As Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finalize">To be added.</param>
        <summary>
            Call this method when the workspace is disposed.
            
            Override this method to do addition work when the workspace is disposed.
            Call this method at the end of your method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentActiveContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CodeAnalysis.DocumentActiveContextChangedEventArgs&gt; DocumentActiveContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CodeAnalysis.DocumentActiveContextChangedEventArgs&gt; DocumentActiveContextChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CodeAnalysis.Workspace.DocumentActiveContextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DocumentActiveContextChanged As EventHandler(Of DocumentActiveContextChangedEventArgs) " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CodeAnalysis.DocumentActiveContextChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An event that is fired when the active context document associated with a buffer 
            changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentClosed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CodeAnalysis.DocumentEventArgs&gt; DocumentClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CodeAnalysis.DocumentEventArgs&gt; DocumentClosed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CodeAnalysis.Workspace.DocumentClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DocumentClosed As EventHandler(Of DocumentEventArgs) " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CodeAnalysis.DocumentEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An event that is fired when a document is closed in the editor.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentOpened">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CodeAnalysis.DocumentEventArgs&gt; DocumentOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CodeAnalysis.DocumentEventArgs&gt; DocumentOpened" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CodeAnalysis.Workspace.DocumentOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DocumentOpened As EventHandler(Of DocumentEventArgs) " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CodeAnalysis.DocumentEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An event that is fired when a documents is opened in the editor.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdditionalDocumentName">
      <MemberSignature Language="C#" Value="protected virtual string GetAdditionalDocumentName (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAdditionalDocumentName(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.GetAdditionalDocumentName(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Gets the name to use for an additional document in an error message.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentIdInCurrentContext">
      <MemberSignature Language="C#" Value="public virtual Microsoft.CodeAnalysis.DocumentId GetDocumentIdInCurrentContext (Microsoft.CodeAnalysis.Text.SourceTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.CodeAnalysis.DocumentId GetDocumentIdInCurrentContext(class Microsoft.CodeAnalysis.Text.SourceTextContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.GetDocumentIdInCurrentContext(Microsoft.CodeAnalysis.Text.SourceTextContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocumentIdInCurrentContext (container As SourceTextContainer) As DocumentId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.DocumentId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Microsoft.CodeAnalysis.Text.SourceTextContainer" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>
            Gets the id for the document associated with the given text container in its current context.
            Documents are normally associated with a text container when the documents are opened.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentName">
      <MemberSignature Language="C#" Value="protected virtual string GetDocumentName (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetDocumentName(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.GetDocumentName(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Gets the name to use for a document in an error message.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenDocumentIds">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt; GetOpenDocumentIds (Microsoft.CodeAnalysis.ProjectId projectId = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; GetOpenDocumentIds(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.GetOpenDocumentIds(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>
            Gets a list of the currently opened documents.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectName">
      <MemberSignature Language="C#" Value="protected virtual string GetProjectName (Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetProjectName(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.GetProjectName(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>
            Gets the name to use for a project in an error message.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedDocumentIds">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt; GetRelatedDocumentIds (Microsoft.CodeAnalysis.Text.SourceTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; GetRelatedDocumentIds(class Microsoft.CodeAnalysis.Text.SourceTextContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.GetRelatedDocumentIds(Microsoft.CodeAnalysis.Text.SourceTextContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedDocumentIds (container As SourceTextContainer) As IEnumerable(Of DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Microsoft.CodeAnalysis.Text.SourceTextContainer" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>
            Gets the ids for documents associated with a text container.
            Documents are normally associated with a text container when the documents are opened.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceRegistration">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.WorkspaceRegistration GetWorkspaceRegistration (Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.WorkspaceRegistration GetWorkspaceRegistration(class Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.GetWorkspaceRegistration(Microsoft.CodeAnalysis.Text.SourceTextContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWorkspaceRegistration (textContainer As SourceTextContainer) As WorkspaceRegistration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.WorkspaceRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textContainer" Type="Microsoft.CodeAnalysis.Text.SourceTextContainer" />
      </Parameters>
      <Docs>
        <param name="textContainer">To be added.</param>
        <summary>
            Returns a <see cref="T:Microsoft.CodeAnalysis.WorkspaceRegistration" /> for a given text container.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDocumentOpen">
      <MemberSignature Language="C#" Value="public virtual bool IsDocumentOpen (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDocumentOpen(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.IsDocumentOpen(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Determines if the document is currently open in the host environment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public string Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Kind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Workspace.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The kind of the workspace. 
            This is generally <see cref="F:Microsoft.CodeAnalysis.WorkspaceKind.Host" /> if originating from the host environment, but may be 
            any other name used for a specific kind of workspace.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAdditionalDocumentAdded">
      <MemberSignature Language="C#" Value="protected internal void OnAdditionalDocumentAdded (Microsoft.CodeAnalysis.DocumentInfo documentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnAdditionalDocumentAdded(class Microsoft.CodeAnalysis.DocumentInfo documentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentInfo" Type="Microsoft.CodeAnalysis.DocumentInfo" />
      </Parameters>
      <Docs>
        <param name="documentInfo">To be added.</param>
        <summary>
            Call this method when an additional document is added to a project in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAdditionalDocumentClosed">
      <MemberSignature Language="C#" Value="protected internal void OnAdditionalDocumentClosed (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextLoader reloader);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnAdditionalDocumentClosed(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.TextLoader reloader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentClosed(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="reloader" Type="Microsoft.CodeAnalysis.TextLoader" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="reloader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAdditionalDocumentOpened">
      <MemberSignature Language="C#" Value="protected internal void OnAdditionalDocumentOpened (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer, bool isCurrentContext = true);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnAdditionalDocumentOpened(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer, bool isCurrentContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentOpened(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceTextContainer,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="textContainer" Type="Microsoft.CodeAnalysis.Text.SourceTextContainer" />
        <Parameter Name="isCurrentContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="isCurrentContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAdditionalDocumentRemoved">
      <MemberSignature Language="C#" Value="protected internal void OnAdditionalDocumentRemoved (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnAdditionalDocumentRemoved(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Call this method when an additional document is removed from a project in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAdditionalDocumentTextChanged">
      <MemberSignature Language="C#" Value="protected internal void OnAdditionalDocumentTextChanged (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.Text.SourceText newText, Microsoft.CodeAnalysis.PreservationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnAdditionalDocumentTextChanged(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.Text.SourceText newText, valuetype Microsoft.CodeAnalysis.PreservationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="newText" Type="Microsoft.CodeAnalysis.Text.SourceText" />
        <Parameter Name="mode" Type="Microsoft.CodeAnalysis.PreservationMode" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="newText">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>
            Call this method when the text of a document is updated in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAdditionalDocumentTextLoaderChanged">
      <MemberSignature Language="C#" Value="protected internal void OnAdditionalDocumentTextLoaderChanged (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnAdditionalDocumentTextLoaderChanged(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.TextLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="loader" Type="Microsoft.CodeAnalysis.TextLoader" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="loader">To be added.</param>
        <summary>
            Call this method when the text of a document is changed on disk.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAnalyzerReferenceAdded">
      <MemberSignature Language="C#" Value="protected internal void OnAnalyzerReferenceAdded (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnAnalyzerReferenceAdded(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="analyzerReference" Type="Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="analyzerReference">To be added.</param>
        <summary>
            Call this method when an analyzer reference is added to a project in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAnalyzerReferenceRemoved">
      <MemberSignature Language="C#" Value="protected internal void OnAnalyzerReferenceRemoved (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnAnalyzerReferenceRemoved(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="analyzerReference" Type="Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="analyzerReference">To be added.</param>
        <summary>
            Call this method when an analyzer reference is removed from a project in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAssemblyNameChanged">
      <MemberSignature Language="C#" Value="protected internal void OnAssemblyNameChanged (Microsoft.CodeAnalysis.ProjectId projectId, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnAssemblyNameChanged(class Microsoft.CodeAnalysis.ProjectId projectId, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnAssemblyNameChanged(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="assemblyName">To be added.</param>
        <summary>
            Call this method when a project's assembly name is changed in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCompilationOptionsChanged">
      <MemberSignature Language="C#" Value="protected internal void OnCompilationOptionsChanged (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.CompilationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnCompilationOptionsChanged(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.CompilationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="options" Type="Microsoft.CodeAnalysis.CompilationOptions" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            Call this method when a project's compilation options are changed in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentAdded">
      <MemberSignature Language="C#" Value="protected internal void OnDocumentAdded (Microsoft.CodeAnalysis.DocumentInfo documentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDocumentAdded(class Microsoft.CodeAnalysis.DocumentInfo documentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentInfo" Type="Microsoft.CodeAnalysis.DocumentInfo" />
      </Parameters>
      <Docs>
        <param name="documentInfo">To be added.</param>
        <summary>
            Call this method when a document is added to a project in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentClosed">
      <MemberSignature Language="C#" Value="protected internal void OnDocumentClosed (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextLoader reloader, bool updateActiveContext = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDocumentClosed(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.TextLoader reloader, bool updateActiveContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentClosed(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="reloader" Type="Microsoft.CodeAnalysis.TextLoader" />
        <Parameter Name="updateActiveContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="reloader">To be added.</param>
        <param name="updateActiveContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentClosing (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentClosing(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentClosing(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Override this method to act immediately when a document is closing, as opposed
            to waiting for the corresponding workspace changed event to fire asynchronously.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentContextUpdated">
      <MemberSignature Language="C#" Value="protected void OnDocumentContextUpdated (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnDocumentContextUpdated(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentContextUpdated(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentInfoChanged">
      <MemberSignature Language="C#" Value="protected internal void OnDocumentInfoChanged (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.DocumentInfo newInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDocumentInfoChanged(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.DocumentInfo newInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentInfoChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.DocumentInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="newInfo" Type="Microsoft.CodeAnalysis.DocumentInfo" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="newInfo">To be added.</param>
        <summary>
            Call this method when the document info changes, such as the name, folders or file path.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentOpened">
      <MemberSignature Language="C#" Value="protected internal void OnDocumentOpened (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer, bool isCurrentContext = true);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDocumentOpened(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer, bool isCurrentContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentOpened(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceTextContainer,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="textContainer" Type="Microsoft.CodeAnalysis.Text.SourceTextContainer" />
        <Parameter Name="isCurrentContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="textContainer">To be added.</param>
        <param name="isCurrentContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentReloaded">
      <MemberSignature Language="C#" Value="protected internal void OnDocumentReloaded (Microsoft.CodeAnalysis.DocumentInfo newDocumentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDocumentReloaded(class Microsoft.CodeAnalysis.DocumentInfo newDocumentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentReloaded(Microsoft.CodeAnalysis.DocumentInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnDocumentReloaded (newDocumentInfo As DocumentInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newDocumentInfo" Type="Microsoft.CodeAnalysis.DocumentInfo" />
      </Parameters>
      <Docs>
        <param name="newDocumentInfo">To be added.</param>
        <summary>
            Call this method when a document is reloaded in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentRemoved">
      <MemberSignature Language="C#" Value="protected internal void OnDocumentRemoved (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDocumentRemoved(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Call this method when a document is removed from a project in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentSourceCodeKindChanged">
      <MemberSignature Language="C#" Value="protected internal void OnDocumentSourceCodeKindChanged (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.SourceCodeKind sourceCodeKind);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDocumentSourceCodeKindChanged(class Microsoft.CodeAnalysis.DocumentId documentId, valuetype Microsoft.CodeAnalysis.SourceCodeKind sourceCodeKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentSourceCodeKindChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.SourceCodeKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="sourceCodeKind" Type="Microsoft.CodeAnalysis.SourceCodeKind" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="sourceCodeKind">To be added.</param>
        <summary>
            Call this method when the SourceCodeKind of a document changes in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentTextChanged (Microsoft.CodeAnalysis.Document document);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentTextChanged(class Microsoft.CodeAnalysis.Document document) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.Document)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Microsoft.CodeAnalysis.Document" />
      </Parameters>
      <Docs>
        <param name="document">To be added.</param>
        <summary>
            Override this method to act immediately when the text of a document has changed, as opposed
            to waiting for the corresponding workspace changed event to fire asynchronously.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentTextChanged">
      <MemberSignature Language="C#" Value="protected internal void OnDocumentTextChanged (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.Text.SourceText newText, Microsoft.CodeAnalysis.PreservationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDocumentTextChanged(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.Text.SourceText newText, valuetype Microsoft.CodeAnalysis.PreservationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="newText" Type="Microsoft.CodeAnalysis.Text.SourceText" />
        <Parameter Name="mode" Type="Microsoft.CodeAnalysis.PreservationMode" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="newText">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>
            Call this method when the text of a document is updated in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentTextLoaderChanged">
      <MemberSignature Language="C#" Value="protected internal void OnDocumentTextLoaderChanged (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDocumentTextLoaderChanged(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.TextLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="loader" Type="Microsoft.CodeAnalysis.TextLoader" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="loader">To be added.</param>
        <summary>
            Call this method when the text of a document is changed on disk.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMetadataReferenceAdded">
      <MemberSignature Language="C#" Value="protected internal void OnMetadataReferenceAdded (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.MetadataReference metadataReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnMetadataReferenceAdded(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.MetadataReference metadataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="metadataReference" Type="Microsoft.CodeAnalysis.MetadataReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="metadataReference">To be added.</param>
        <summary>
            Call this method when a metadata reference is added to a project in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMetadataReferenceRemoved">
      <MemberSignature Language="C#" Value="protected internal void OnMetadataReferenceRemoved (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.MetadataReference metadataReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnMetadataReferenceRemoved(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.MetadataReference metadataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="metadataReference" Type="Microsoft.CodeAnalysis.MetadataReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="metadataReference">To be added.</param>
        <summary>
            Call this method when a metadata reference is removed from a project in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOutputFilePathChanged">
      <MemberSignature Language="C#" Value="protected internal void OnOutputFilePathChanged (Microsoft.CodeAnalysis.ProjectId projectId, string outputFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnOutputFilePathChanged(class Microsoft.CodeAnalysis.ProjectId projectId, string outputFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnOutputFilePathChanged(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="outputFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="outputFilePath">To be added.</param>
        <summary>
            Call this method when a project's output file path is changed in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParseOptionsChanged">
      <MemberSignature Language="C#" Value="protected internal void OnParseOptionsChanged (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.ParseOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnParseOptionsChanged(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.ParseOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="options" Type="Microsoft.CodeAnalysis.ParseOptions" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            Call this method when a project's parse options are changed in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProjectAdded">
      <MemberSignature Language="C#" Value="protected internal void OnProjectAdded (Microsoft.CodeAnalysis.ProjectInfo projectInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnProjectAdded(class Microsoft.CodeAnalysis.ProjectInfo projectInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectInfo" Type="Microsoft.CodeAnalysis.ProjectInfo" />
      </Parameters>
      <Docs>
        <param name="projectInfo">To be added.</param>
        <summary>
            Call this method to respond to a project being added/opened in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProjectNameChanged">
      <MemberSignature Language="C#" Value="protected internal void OnProjectNameChanged (Microsoft.CodeAnalysis.ProjectId projectId, string name, string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnProjectNameChanged(class Microsoft.CodeAnalysis.ProjectId projectId, string name, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnProjectNameChanged(Microsoft.CodeAnalysis.ProjectId,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="name">To be added.</param>
        <param name="filePath">To be added.</param>
        <summary>
            Call this method when a project's name is changed in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProjectReferenceAdded">
      <MemberSignature Language="C#" Value="protected internal void OnProjectReferenceAdded (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.ProjectReference projectReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnProjectReferenceAdded(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.ProjectReference projectReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="projectReference" Type="Microsoft.CodeAnalysis.ProjectReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="projectReference">To be added.</param>
        <summary>
            Call this method when a project reference is added to a project in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProjectReferenceRemoved">
      <MemberSignature Language="C#" Value="protected internal void OnProjectReferenceRemoved (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.ProjectReference projectReference);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnProjectReferenceRemoved(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.ProjectReference projectReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="projectReference" Type="Microsoft.CodeAnalysis.ProjectReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="projectReference">To be added.</param>
        <summary>
            Call this method when a project reference is removed from a project in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProjectReloaded">
      <MemberSignature Language="C#" Value="protected internal virtual void OnProjectReloaded (Microsoft.CodeAnalysis.ProjectInfo reloadedProjectInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnProjectReloaded(class Microsoft.CodeAnalysis.ProjectInfo reloadedProjectInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnProjectReloaded(Microsoft.CodeAnalysis.ProjectInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnProjectReloaded (reloadedProjectInfo As ProjectInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reloadedProjectInfo" Type="Microsoft.CodeAnalysis.ProjectInfo" />
      </Parameters>
      <Docs>
        <param name="reloadedProjectInfo">To be added.</param>
        <summary>
            Call this method to respond to a project being reloaded in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProjectRemoved">
      <MemberSignature Language="C#" Value="protected internal virtual void OnProjectRemoved (Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnProjectRemoved(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnProjectRemoved(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>
            Call this method to respond to a project being removed from the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSolutionAdded">
      <MemberSignature Language="C#" Value="protected internal void OnSolutionAdded (Microsoft.CodeAnalysis.SolutionInfo solutionInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnSolutionAdded(class Microsoft.CodeAnalysis.SolutionInfo solutionInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnSolutionAdded(Microsoft.CodeAnalysis.SolutionInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionInfo" Type="Microsoft.CodeAnalysis.SolutionInfo" />
      </Parameters>
      <Docs>
        <param name="solutionInfo">To be added.</param>
        <summary>
            Call this method to respond to a solution being opened in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSolutionReloaded">
      <MemberSignature Language="C#" Value="protected internal void OnSolutionReloaded (Microsoft.CodeAnalysis.SolutionInfo reloadedSolutionInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnSolutionReloaded(class Microsoft.CodeAnalysis.SolutionInfo reloadedSolutionInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnSolutionReloaded(Microsoft.CodeAnalysis.SolutionInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnSolutionReloaded (reloadedSolutionInfo As SolutionInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reloadedSolutionInfo" Type="Microsoft.CodeAnalysis.SolutionInfo" />
      </Parameters>
      <Docs>
        <param name="reloadedSolutionInfo">To be added.</param>
        <summary>
            Call this method to respond to a solution being reloaded in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSolutionRemoved">
      <MemberSignature Language="C#" Value="protected internal void OnSolutionRemoved ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnSolutionRemoved() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnSolutionRemoved" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnSolutionRemoved ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This method is called when the solution is removed from the workspace.
            
            Override this method if you want to do additional work when the solution is removed. 
            Call the base method at the end of your method.
            Call this method to respond to a solution being removed/cleared/closed in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWorkspaceFailed">
      <MemberSignature Language="C#" Value="protected internal virtual void OnWorkspaceFailed (Microsoft.CodeAnalysis.WorkspaceDiagnostic diagnostic);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnWorkspaceFailed(class Microsoft.CodeAnalysis.WorkspaceDiagnostic diagnostic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OnWorkspaceFailed(Microsoft.CodeAnalysis.WorkspaceDiagnostic)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnWorkspaceFailed (diagnostic As WorkspaceDiagnostic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostic" Type="Microsoft.CodeAnalysis.WorkspaceDiagnostic" />
      </Parameters>
      <Docs>
        <param name="diagnostic">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenAdditionalDocument">
      <MemberSignature Language="C#" Value="public virtual void OpenAdditionalDocument (Microsoft.CodeAnalysis.DocumentId documentId, bool activate = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenAdditionalDocument(class Microsoft.CodeAnalysis.DocumentId documentId, bool activate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OpenAdditionalDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="activate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="activate">To be added.</param>
        <summary>
            Open the specified additional document in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDocument">
      <MemberSignature Language="C#" Value="public virtual void OpenDocument (Microsoft.CodeAnalysis.DocumentId documentId, bool activate = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenDocument(class Microsoft.CodeAnalysis.DocumentId documentId, bool activate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.OpenDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="activate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="activate">To be added.</param>
        <summary>
            Open the specified document in the host environment.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Options.OptionSet Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Options.OptionSet Options" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Workspace.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As OptionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.OptionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the set of all global options.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialSemanticsEnabled">
      <MemberSignature Language="C#" Value="protected internal virtual bool PartialSemanticsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PartialSemanticsEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Workspace.PartialSemanticsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property PartialSemanticsEnabled As Boolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Override this property if the workspace supports partial semantics for documents.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseDocumentActiveContextChangedEventAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task RaiseDocumentActiveContextChangedEventAsync (Microsoft.CodeAnalysis.Document document);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task RaiseDocumentActiveContextChangedEventAsync(class Microsoft.CodeAnalysis.Document document) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.RaiseDocumentActiveContextChangedEventAsync(Microsoft.CodeAnalysis.Document)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete. Use the RaiseDocumentActiveContextChangedEventAsync(SourceTextContainer, DocumentId, DocumentId) overload instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Microsoft.CodeAnalysis.Document" />
      </Parameters>
      <Docs>
        <param name="document">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseDocumentActiveContextChangedEventAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task RaiseDocumentActiveContextChangedEventAsync (Microsoft.CodeAnalysis.Text.SourceTextContainer sourceTextContainer, Microsoft.CodeAnalysis.DocumentId oldActiveContextDocumentId, Microsoft.CodeAnalysis.DocumentId newActiveContextDocumentId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task RaiseDocumentActiveContextChangedEventAsync(class Microsoft.CodeAnalysis.Text.SourceTextContainer sourceTextContainer, class Microsoft.CodeAnalysis.DocumentId oldActiveContextDocumentId, class Microsoft.CodeAnalysis.DocumentId newActiveContextDocumentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.RaiseDocumentActiveContextChangedEventAsync(Microsoft.CodeAnalysis.Text.SourceTextContainer,Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceTextContainer" Type="Microsoft.CodeAnalysis.Text.SourceTextContainer" />
        <Parameter Name="oldActiveContextDocumentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="newActiveContextDocumentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="sourceTextContainer">To be added.</param>
        <param name="oldActiveContextDocumentId">To be added.</param>
        <param name="newActiveContextDocumentId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseDocumentClosedEventAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task RaiseDocumentClosedEventAsync (Microsoft.CodeAnalysis.Document document);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task RaiseDocumentClosedEventAsync(class Microsoft.CodeAnalysis.Document document) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.RaiseDocumentClosedEventAsync(Microsoft.CodeAnalysis.Document)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Microsoft.CodeAnalysis.Document" />
      </Parameters>
      <Docs>
        <param name="document">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseDocumentOpenedEventAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task RaiseDocumentOpenedEventAsync (Microsoft.CodeAnalysis.Document document);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task RaiseDocumentOpenedEventAsync(class Microsoft.CodeAnalysis.Document document) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.RaiseDocumentOpenedEventAsync(Microsoft.CodeAnalysis.Document)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Microsoft.CodeAnalysis.Document" />
      </Parameters>
      <Docs>
        <param name="document">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseWorkspaceChangedEventAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task RaiseWorkspaceChangedEventAsync (Microsoft.CodeAnalysis.WorkspaceChangeKind kind, Microsoft.CodeAnalysis.Solution oldSolution, Microsoft.CodeAnalysis.Solution newSolution, Microsoft.CodeAnalysis.ProjectId projectId = null, Microsoft.CodeAnalysis.DocumentId documentId = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task RaiseWorkspaceChangedEventAsync(valuetype Microsoft.CodeAnalysis.WorkspaceChangeKind kind, class Microsoft.CodeAnalysis.Solution oldSolution, class Microsoft.CodeAnalysis.Solution newSolution, class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.RaiseWorkspaceChangedEventAsync(Microsoft.CodeAnalysis.WorkspaceChangeKind,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.DocumentId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.WorkspaceChangeKind" />
        <Parameter Name="oldSolution" Type="Microsoft.CodeAnalysis.Solution" />
        <Parameter Name="newSolution" Type="Microsoft.CodeAnalysis.Solution" />
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <param name="oldSolution">To be added.</param>
        <param name="newSolution">To be added.</param>
        <param name="projectId">To be added.</param>
        <param name="documentId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterText">
      <MemberSignature Language="C#" Value="protected void RegisterText (Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RegisterText(class Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.RegisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RegisterText (textContainer As SourceTextContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textContainer" Type="Microsoft.CodeAnalysis.Text.SourceTextContainer" />
      </Parameters>
      <Docs>
        <param name="textContainer">To be added.</param>
        <summary>
            Register a correspondence between a text container and a workspace.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleTask">
      <MemberSignature Language="C#" Value="protected internal System.Threading.Tasks.Task ScheduleTask (Action action, string taskName = &quot;Workspace.Task&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Threading.Tasks.Task ScheduleTask(class System.Action action, string taskName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ScheduleTask(System.Action,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
        <Parameter Name="taskName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="taskName">To be added.</param>
        <summary>
            Executes an action as a background task, as part of a sequential queue of tasks.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleTask&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Threading.Tasks.Task&lt;T&gt; ScheduleTask&lt;T&gt; (Func&lt;T&gt; func, string taskName = &quot;Workspace.Task&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; ScheduleTask&lt;T&gt;(class System.Func`1&lt;!!T&gt; func, string taskName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.ScheduleTask``1(System.Func{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function ScheduleTask(Of T) (func As Func(Of T), Optional taskName As String = &quot;Workspace.Task&quot;) As Task(Of T)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="func" Type="System.Func&lt;T&gt;" />
        <Parameter Name="taskName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="func">To be added.</param>
        <param name="taskName">To be added.</param>
        <summary>
            Execute a function as a background task, as part of a sequential queue of tasks.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Host.HostWorkspaceServices Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Host.HostWorkspaceServices Services" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Workspace.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As HostWorkspaceServices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Host.HostWorkspaceServices</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Services provider by the host for implementing workspace features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentSolution">
      <MemberSignature Language="C#" Value="protected Microsoft.CodeAnalysis.Solution SetCurrentSolution (Microsoft.CodeAnalysis.Solution solution);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.CodeAnalysis.Solution SetCurrentSolution(class Microsoft.CodeAnalysis.Solution solution) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.SetCurrentSolution(Microsoft.CodeAnalysis.Solution)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solution" Type="Microsoft.CodeAnalysis.Solution" />
      </Parameters>
      <Docs>
        <param name="solution">To be added.</param>
        <summary>
            Sets the <see cref="P:Microsoft.CodeAnalysis.Workspace.CurrentSolution" /> of this workspace. This method does not raise a <see cref="E:Microsoft.CodeAnalysis.Workspace.WorkspaceChanged" /> event.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This method does not guarantee that linked files will have the same contents. Callers 
            should enforce that policy before passing in the new solution.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryApplyChanges">
      <MemberSignature Language="C#" Value="public virtual bool TryApplyChanges (Microsoft.CodeAnalysis.Solution newSolution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryApplyChanges(class Microsoft.CodeAnalysis.Solution newSolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryApplyChanges (newSolution As Solution) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSolution" Type="Microsoft.CodeAnalysis.Solution" />
      </Parameters>
      <Docs>
        <param name="newSolution">To be added.</param>
        <summary>
            Apply changes made to a solution back to the workspace.
            
            The specified solution must be one that originated from this workspace. If it is not, or the workspace
            has been updated since the solution was obtained from the workspace, then this method returns false. This method
            will still throw if the solution contains changes that are not supported according to the <see cref="M:Microsoft.CodeAnalysis.Workspace.CanApplyChange(Microsoft.CodeAnalysis.ApplyChangesKind)" />
            method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Thrown if the solution contains changes not supported according to the
            <see cref="M:Microsoft.CodeAnalysis.Workspace.CanApplyChange(Microsoft.CodeAnalysis.ApplyChangesKind)" /> method.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetWorkspace">
      <MemberSignature Language="C#" Value="public static bool TryGetWorkspace (Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer, out Microsoft.CodeAnalysis.Workspace workspace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetWorkspace(class Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer, [out] class Microsoft.CodeAnalysis.Workspace&amp; workspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.TryGetWorkspace(Microsoft.CodeAnalysis.Text.SourceTextContainer,Microsoft.CodeAnalysis.Workspace@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetWorkspace (textContainer As SourceTextContainer, ByRef workspace As Workspace) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textContainer" Type="Microsoft.CodeAnalysis.Text.SourceTextContainer" />
        <Parameter Name="workspace" Type="Microsoft.CodeAnalysis.Workspace&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="textContainer">To be added.</param>
        <param name="workspace">To be added.</param>
        <summary>
            Gets the workspace associated with the specific text container.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterText">
      <MemberSignature Language="C#" Value="protected void UnregisterText (Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UnregisterText(class Microsoft.CodeAnalysis.Text.SourceTextContainer textContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.UnregisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UnregisterText (textContainer As SourceTextContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textContainer" Type="Microsoft.CodeAnalysis.Text.SourceTextContainer" />
      </Parameters>
      <Docs>
        <param name="textContainer">To be added.</param>
        <summary>
            Unregister a correspondence between a text container and a workspace.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateReferencesAfterAdd">
      <MemberSignature Language="C#" Value="protected void UpdateReferencesAfterAdd ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateReferencesAfterAdd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Workspace.UpdateReferencesAfterAdd" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateReferencesAfterAdd ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Updates all projects to properly reference other projects as project references instead of metadata references.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkspaceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CodeAnalysis.WorkspaceChangeEventArgs&gt; WorkspaceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CodeAnalysis.WorkspaceChangeEventArgs&gt; WorkspaceChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CodeAnalysis.Workspace.WorkspaceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkspaceChanged As EventHandler(Of WorkspaceChangeEventArgs) " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CodeAnalysis.WorkspaceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An event raised whenever the current solution is changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkspaceFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs&gt; WorkspaceFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs&gt; WorkspaceFailed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CodeAnalysis.Workspace.WorkspaceFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkspaceFailed As EventHandler(Of WorkspaceDiagnosticEventArgs) " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An event raised whenever the workspace or part of its solution model
            fails to access a file or other external resource.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>