<Type Name="ImportedNamespaceOrType" FullName="Microsoft.CodeAnalysis.ImportedNamespaceOrType">
  <TypeSignature Language="C#" Value="public readonly struct ImportedNamespaceOrType" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImportedNamespaceOrType extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.ImportedNamespaceOrType" />
  <TypeSignature Language="VB.NET" Value="Public Structure ImportedNamespaceOrType" />
  <TypeSignature Language="F#" Value="type ImportedNamespaceOrType = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents an <see cref="T:Microsoft.CodeAnalysis.INamespaceOrTypeSymbol" /> that has been imported, and the location the import was
            declared at.  This corresponds to <c>using Namespace;</c> or <c>using static Type;</c> in C#, or <c>Imports
            TypeOrNamespace</c> in Visual Basic.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DeclaringSyntaxReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxReference? DeclaringSyntaxReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.SyntaxReference DeclaringSyntaxReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ImportedNamespaceOrType.DeclaringSyntaxReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringSyntaxReference As SyntaxReference" />
      <MemberSignature Language="F#" Value="member this.DeclaringSyntaxReference : Microsoft.CodeAnalysis.SyntaxReference" Usage="Microsoft.CodeAnalysis.ImportedNamespaceOrType.DeclaringSyntaxReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Location in source where the <c>using</c> directive or <c>Imports</c> clause was declared. Will never be
            null for C#, may be null for Visual Basic for a project-level import directive.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceOrType">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.INamespaceOrTypeSymbol NamespaceOrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.INamespaceOrTypeSymbol NamespaceOrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ImportedNamespaceOrType.NamespaceOrType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamespaceOrType As INamespaceOrTypeSymbol" />
      <MemberSignature Language="F#" Value="member this.NamespaceOrType : Microsoft.CodeAnalysis.INamespaceOrTypeSymbol" Usage="Microsoft.CodeAnalysis.ImportedNamespaceOrType.NamespaceOrType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.INamespaceOrTypeSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
